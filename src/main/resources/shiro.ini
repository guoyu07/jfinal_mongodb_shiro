[main]
#自定义 realm
shiroDbRealm = cc.tuhaolicai.shiro.realm.ShiroDbRealm
#自定义密码比较器
passwordMatcher = cc.tuhaolicai.shiro.match.LimitRetryHashedMatcher
passwordMatcher.hashAlgorithmName = md5
passwordMatcher.hashIterations = 2
passwordMatcher.storedCredentialsHexEncoded = true
shiroDbRealm.credentialsMatcher = $passwordMatcher
#关闭缓存
#关闭缓存后，数据库加载的资源将不会存入缓存中，每次验证资源权限时都将会调用自定义的realm加载数据库中资源权限
shiroDbRealm.cachingEnabled = false
securityManager.realms = $shiroDbRealm

#cache
shiroCacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
shiroCacheManager.cacheManagerConfigFile = classpath:ehcache.xml
securityManager.cacheManager = $shiroCacheManager

#session
#sessionDAO:会话存储/持久化--Shiro提供SessionDAO用于会话的CRUD，即DAO（Data Access Object）模式实现,可理解为就是提供一个创建删除会话的接口，但其功能可以使用下方的会话的监听来操作
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionDAO.activeSessionsCacheName = shiro-activeSessionCache
#sessionDAO = cc.tuhaolicai.shiro.session.dao.MySessionDao

#DefaultSessionManager：DefaultSecurityManager使用的默认实现，用于JavaSE环境;
#ServletContainerSessionManager：DefaultWebSecurityManager使用的默认实现，用于Web环境，其直接使用Servlet容器的会话,另外如果使用ServletContainerSessionManager进行会话管理，Session的超时依赖于底层Servlet容器的超时时间，可以在web.xml中配置其会话的超时时间（分钟为单位）
#用于Web环境的实现，可以替代ServletContainerSessionManager，自己维护着会话，直接废弃了Servlet容器的会话管理。
#sessionManager:会话管理器管理着应用中所有Subject的会话的创建、维护、删除、失效、验证等工作
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager
securityManager.sessionManager.sessionDAO = $sessionDAO

#会话监听 -- 作用shiro创建与删除会话都将会捕捉,这里我们可以自定义逻辑保持session，可用于后期对指定session操作
sessionListener = cc.tuhaolicai.shiro.listener.SimpleSessionListener
securityManager.sessionManager.sessionListeners = $sessionListener

#会话Cookie模板  --  可设置如下
#sessionIdCookie.domain：设置Cookie的域名，默认空，即当前访问的域名
#sessionIdCookie.path：设置Cookie的路径，默认空，即存储在域名根下；
#sessionIdCookie.maxAge：设置Cookie的过期时间，秒为单位，默认-1表示关闭浏览器时过期Cookie；
#sessionIdCookie.httpOnly：如果设置为true，则客户端不会暴露给客户端脚本代码，使用HttpOnly cookie有助于减少某些类型的跨站点脚本攻击；此特性需要实现了Servlet 2.5 MR6及以上版本的规范的Servlet容器支持
#sessionManager.sessionIdCookieEnabled：是否启用/禁用Session Id Cookie，默认是启用的；如果禁用后将不会设置Session Id Cookie，即默认使用了Servlet容器的JSESSIONID，且通过URL重写（URL中的“;JSESSIONID=id”部分）保存Session Id
#sessionIdCookie.name：设置Cookie名字，默认为JSESSIONID

sessionIdCookie = org.apache.shiro.web.servlet.SimpleCookie
sessionIdCookie.name = TP_SESSION_ID
sessionIdCookie.maxAge = -1
#防止XSS攻击
sessionIdCookie.httpOnly = true
securityManager.sessionManager.sessionIdCookie = $sessionIdCookie

#会话验证调度器 -- sessionValidationScheduler：会话验证调度器，sessionManager默认就是使用
sessionValidationScheduler = cc.tuhaolicai.shiro.session.scheduler.MySessionValidationScheduler
#调度时间间隔，单位毫秒--sessionValidationScheduler.interval：设置调度时间间隔，单位毫秒，默认就是1小时
sessionValidationScheduler.interval = 10000
#sessionValidationScheduler.sessionManager：设置会话验证调度器进行会话验证时的会话管理器
sessionValidationScheduler.sessionManager = $sessionManager
securityManager.sessionManager.sessionValidationScheduler = $sessionValidationScheduler

#sessionManager.sessionValidationSchedulerEnabled：是否开启会话验证器，默认是开启的 ，故不需要设置
#sessionManager.sessionValidationScheduler：设置会话验证调度器，默认就是使用ExecutorServiceSessionValidationScheduler
#全局会话超时时间 5分钟   默认情况下globalSessionTimeout将应用给所有Session。可以单独设置每个Session的timeout属性来为每个Session设置其超时时间。
securityManager.sessionManager.globalSessionTimeout = 300000

#记住我
rememberMeManager = org.apache.shiro.web.mgt.CookieRememberMeManager
#cookie加密的密钥
rememberMeManager.cipherKey = 0x45be5137e2e87c3589973580c2c5f3c6
#cookie名称
rememberMeManager.cookie.name = TP_REMEMBERME_COOKIE
#保存7天
rememberMeManager.cookie.maxAge = 604800
rememberMeManager.cookie.httpOnly = true
securityManager.rememberMeManager = $rememberMeManager

#在线会话过滤器
onlineFilter = cc.tuhaolicai.shiro.session.filter.OnlineSessionFilter
onlineFilter.forceLogoutUrl = /invalidSession.jsp
onlineFilter.sessionDAO = $sessionDAO
onlineFilter.cacheManager = $shiroCacheManager

[urls]
/index = anon
# user 表示可以使用rememberMe
/user/** = user,onlineFilter
# authc 必须登录才可以 rememberMe不行
/session/** = authc,onlineFilter